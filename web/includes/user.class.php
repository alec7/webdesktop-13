<?phpclass User{    var $conection;    var $db;        function User() {        $this->conection = mysql_connect("localhost", "root", "");        $this->db = mysql_select_db("webdesktop", $this->conection);    }                  function getBaseUrl() {        $currentPath = $_SERVER['PHP_SELF'];        $pathInfo = pathinfo($currentPath);        $hostName = $_SERVER['HTTP_HOST'];        $protocol = strtolower(substr($_SERVER["SERVER_PROTOCOL"], 0, 5)) == 'https://' ? 'https://' : 'http://';        $BASE_URL = $protocol.$hostName.$pathInfo['dirname'];        return $BASE_URL;    }        function getUserIdByCookieValue($userCookie){        $q = "SELECT user_id FROM cookies ";        $q.= "WHERE gid='".$userCookie."' ";        $result = mysql_query($q, $this->conection);        if ($row = mysql_fetch_array($result)) {            $userId = $row['user_id'];            return $userId;        }        mysql_free_result($result);        mysql_close($conection);    }        function saveUserFile($userId, $fileName, $fileType, $title){        switch ($fileType) {            case "image/jpeg":            case "image/jpg":            case "image/png":            case "image/gif":                $category = "img";                break;            case "application/pdf":            case "text/plain":                $category = "doc";            case "application/octet-stream":                $category = "archive";                break;            case "audio/mp3":            case "audio/wav":                $category = "music";                break;            case "video/mp4":            case "video/mpg":            case "video/webm":                $category = "video";                break;            default:                $category = "another";                break;        }                $q0 = "SELECT count(id) AS count FROM files ";        $q0.= "WHERE name='".$fileName."' AND user_id='".$userId."' ";        $result0 = mysql_query($q0, $this->conection);        if ($row0 = mysql_fetch_array($result0)) {            $count = $row0['count'];        }                if (!empty($count)) {            $q = "UPDATE files ";        } else {            $q = "INSERT INTO files ";        }        //$q = "INSERT INTO files ";        $q.= "SET name='".$fileName."', title='".$title."', user_id='".$userId . "', ";        $q.= "type='".$fileType."', category='".$category."', date_add=CURDATE() ";                if (!empty($count)) {            $q.= "WHERE name='".$fileName."' ";        }        $result = mysql_query($q, $this->conection);        mysql_free_result($result0);        mysql_free_result($result);        mysql_close($conection);    }                        function transliterate($string) {        $table = array(//            'À'=>'A', 'Á'=>'A', 'Â'=>'A', 'Ã'=>'A', 'Ä'=>'A', 'Å'=>'A', 'Ă'=>'A', 'Ā'=>'A', 'Ą'=>'A', 'Æ'=>'A', 'Ǽ'=>'A',//            'à'=>'a', 'á'=>'a', 'â'=>'a', 'ã'=>'a', 'ä'=>'a', 'å'=>'a', 'ă'=>'a', 'ā'=>'a', 'ą'=>'a', 'æ'=>'a', 'ǽ'=>'a',////            'Þ'=>'B', 'þ'=>'b', 'ß'=>'Ss',////            'Ç'=>'C', 'Č'=>'C', 'Ć'=>'C', 'Ĉ'=>'C', 'Ċ'=>'C',//            'ç'=>'c', 'č'=>'c', 'ć'=>'c', 'ĉ'=>'c', 'ċ'=>'c',////            'Đ'=>'Dj', 'Ď'=>'D', 'Đ'=>'D',//            'đ'=>'dj', 'ď'=>'d',////            'È'=>'E', 'É'=>'E', 'Ê'=>'E', 'Ë'=>'E', 'Ĕ'=>'E', 'Ē'=>'E', 'Ę'=>'E', 'Ė'=>'E',//            'è'=>'e', 'é'=>'e', 'ê'=>'e', 'ë'=>'e', 'ĕ'=>'e', 'ē'=>'e', 'ę'=>'e', 'ė'=>'e',////            'Ĝ'=>'G', 'Ğ'=>'G', 'Ġ'=>'G', 'Ģ'=>'G',//            'ĝ'=>'g', 'ğ'=>'g', 'ġ'=>'g', 'ģ'=>'g',////            'Ĥ'=>'H', 'Ħ'=>'H',//            'ĥ'=>'h', 'ħ'=>'h',////            'Ì'=>'I', 'Í'=>'I', 'Î'=>'I', 'Ï'=>'I', 'İ'=>'I', 'Ĩ'=>'I', 'Ī'=>'I', 'Ĭ'=>'I', 'Į'=>'I',//            'ì'=>'i', 'í'=>'i', 'î'=>'i', 'ï'=>'i', 'į'=>'i', 'ĩ'=>'i', 'ī'=>'i', 'ĭ'=>'i', 'ı'=>'i',////            'Ĵ'=>'J',//            'ĵ'=>'j',////            'Ķ'=>'K',//            'ķ'=>'k', 'ĸ'=>'k',////            'Ĺ'=>'L', 'Ļ'=>'L', 'Ľ'=>'L', 'Ŀ'=>'L', 'Ł'=>'L',//            'ĺ'=>'l', 'ļ'=>'l', 'ľ'=>'l', 'ŀ'=>'l', 'ł'=>'l',////            'Ñ'=>'N', 'Ń'=>'N', 'Ň'=>'N', 'Ņ'=>'N', 'Ŋ'=>'N',//            'ñ'=>'n', 'ń'=>'n', 'ň'=>'n', 'ņ'=>'n', 'ŋ'=>'n', 'ŉ'=>'n',////            'Ò'=>'O', 'Ó'=>'O', 'Ô'=>'O', 'Õ'=>'O', 'Ö'=>'O', 'Ø'=>'O', 'Ō'=>'O', 'Ŏ'=>'O', 'Ő'=>'O', 'Œ'=>'O',//            'ò'=>'o', 'ó'=>'o', 'ô'=>'o', 'õ'=>'o', 'ö'=>'o', 'ø'=>'o', 'ō'=>'o', 'ŏ'=>'o', 'ő'=>'o', 'œ'=>'o', 'ð'=>'o',////            'Ŕ'=>'R', 'Ř'=>'R',//            'ŕ'=>'r', 'ř'=>'r', 'ŗ'=>'r',////            'Š'=>'S', 'Ŝ'=>'S', 'Ś'=>'S', 'Ş'=>'S',//            'š'=>'s', 'ŝ'=>'s', 'ś'=>'s', 'ş'=>'s',////            'Ŧ'=>'T', 'Ţ'=>'T', 'Ť'=>'T',//            'ŧ'=>'t', 'ţ'=>'t', 'ť'=>'t',////            'Ù'=>'U', 'Ú'=>'U', 'Û'=>'U', 'Ü'=>'U', 'Ũ'=>'U', 'Ū'=>'U', 'Ŭ'=>'U', 'Ů'=>'U', 'Ű'=>'U', 'Ų'=>'U',//            'ù'=>'u', 'ú'=>'u', 'û'=>'u', 'ü'=>'u', 'ũ'=>'u', 'ū'=>'u', 'ŭ'=>'u', 'ů'=>'u', 'ű'=>'u', 'ų'=>'u',////            'Ŵ'=>'W', 'Ẁ'=>'W', 'Ẃ'=>'W', 'Ẅ'=>'W',//            'ŵ'=>'w', 'ẁ'=>'w', 'ẃ'=>'w', 'ẅ'=>'w',////            'Ý'=>'Y', 'Ÿ'=>'Y', 'Ŷ'=>'Y',//            'ý'=>'y', 'ÿ'=>'y', 'ŷ'=>'y',////            'Ž'=>'Z', 'Ź'=>'Z', 'Ż'=>'Z', 'Ž'=>'Z',//            'ž'=>'z', 'ź'=>'z', 'ż'=>'z', 'ž'=>'z',////            '“'=>'"', '”'=>'"', '‘'=>"'", '’'=>"'", '•'=>'-', '…'=>'...', '—'=>'-', '–'=>'-', '¿'=>'?', '¡'=>'!', '°'=>' degrees ',//            '¼'=>' 1/4 ', '½'=>' 1/2 ', '¾'=>' 3/4 ', '⅓'=>' 1/3 ', '⅔'=>' 2/3 ', '⅛'=>' 1/8 ', '⅜'=>' 3/8 ', '⅝'=>' 5/8 ', '⅞'=>' 7/8 ',//            '÷'=>' divided by ', '×'=>' times ', '±'=>' plus-minus ', '√'=>' square root ', '∞'=>' infinity ',//            '≈'=>' almost equal to ', '≠'=>' not equal to ', '≡'=>' identical to ', '≤'=>' less than or equal to ', '≥'=>' greater than or equal to ',//            '←'=>' left ', '→'=>' right ', '↑'=>' up ', '↓'=>' down ', '↔'=>' left and right ', '↕'=>' up and down ',//            '℅'=>' care of ', '℮' => ' estimated ',//            'Ω'=>' ohm ',//            '♀'=>' female ', '♂'=>' male ',//            '©'=>' Copyright ', '®'=>' Registered ', '™' =>' Trademark ',                        '&amp;' => 'and',   '@' => 'at',    '©' => 'c', '®' => 'r', 'À' => 'a',            'Á' => 'a', 'Â' => 'a', 'Ä' => 'a', 'Å' => 'a', 'Æ' => 'ae','Ç' => 'c',            'È' => 'e', 'É' => 'e', 'Ë' => 'e', 'Ì' => 'i', 'Í' => 'i', 'Î' => 'i',            'Ï' => 'i', 'Ò' => 'o', 'Ó' => 'o', 'Ô' => 'o', 'Õ' => 'o', 'Ö' => 'o',            'Ø' => 'o', 'Ù' => 'u', 'Ú' => 'u', 'Û' => 'u', 'Ü' => 'u', 'Ý' => 'y',            'ß' => 'ss','à' => 'a', 'á' => 'a', 'â' => 'a', 'ä' => 'a', 'å' => 'a',            'æ' => 'ae','ç' => 'c', 'è' => 'e', 'é' => 'e', 'ê' => 'e', 'ë' => 'e',            'ì' => 'i', 'í' => 'i', 'î' => 'i', 'ï' => 'i', 'ò' => 'o', 'ó' => 'o',            'ô' => 'o', 'õ' => 'o', 'ö' => 'o', 'ø' => 'o', 'ù' => 'u', 'ú' => 'u',            'û' => 'u', 'ü' => 'u', 'ý' => 'y', 'þ' => 'p', 'ÿ' => 'y', 'Ā' => 'a',            'ā' => 'a', 'Ă' => 'a', 'ă' => 'a', 'Ą' => 'a', 'ą' => 'a', 'Ć' => 'c',            'ć' => 'c', 'Ĉ' => 'c', 'ĉ' => 'c', 'Ċ' => 'c', 'ċ' => 'c', 'Č' => 'c',            'č' => 'c', 'Ď' => 'd', 'ď' => 'd', 'Đ' => 'd', 'đ' => 'd', 'Ē' => 'e',            'ē' => 'e', 'Ĕ' => 'e', 'ĕ' => 'e', 'Ė' => 'e', 'ė' => 'e', 'Ę' => 'e',            'ę' => 'e', 'Ě' => 'e', 'ě' => 'e', 'Ĝ' => 'g', 'ĝ' => 'g', 'Ğ' => 'g',            'ğ' => 'g', 'Ġ' => 'g', 'ġ' => 'g', 'Ģ' => 'g', 'ģ' => 'g', 'Ĥ' => 'h',            'ĥ' => 'h', 'Ħ' => 'h', 'ħ' => 'h', 'Ĩ' => 'i', 'ĩ' => 'i', 'Ī' => 'i',            'ī' => 'i', 'Ĭ' => 'i', 'ĭ' => 'i', 'Į' => 'i', 'į' => 'i', 'İ' => 'i',            'ı' => 'i', 'Ĳ' => 'ij','ĳ' => 'ij','Ĵ' => 'j', 'ĵ' => 'j', 'Ķ' => 'k',            'ķ' => 'k', 'ĸ' => 'k', 'Ĺ' => 'l', 'ĺ' => 'l', 'Ļ' => 'l', 'ļ' => 'l',            'Ľ' => 'l', 'ľ' => 'l', 'Ŀ' => 'l', 'ŀ' => 'l', 'Ł' => 'l', 'ł' => 'l',            'Ń' => 'n', 'ń' => 'n', 'Ņ' => 'n', 'ņ' => 'n', 'Ň' => 'n', 'ň' => 'n',            'ŉ' => 'n', 'Ŋ' => 'n', 'ŋ' => 'n', 'Ō' => 'o', 'ō' => 'o', 'Ŏ' => 'o',            'ŏ' => 'o', 'Ő' => 'o', 'ő' => 'o', 'Œ' => 'oe','œ' => 'oe','Ŕ' => 'r',            'ŕ' => 'r', 'Ŗ' => 'r', 'ŗ' => 'r', 'Ř' => 'r', 'ř' => 'r', 'Ś' => 's',            'ś' => 's', 'Ŝ' => 's', 'ŝ' => 's', 'Ş' => 's', 'ş' => 's', 'Š' => 's',            'š' => 's', 'Ţ' => 't', 'ţ' => 't', 'Ť' => 't', 'ť' => 't', 'Ŧ' => 't',            'ŧ' => 't', 'Ũ' => 'u', 'ũ' => 'u', 'Ū' => 'u', 'ū' => 'u', 'Ŭ' => 'u',            'ŭ' => 'u', 'Ů' => 'u', 'ů' => 'u', 'Ű' => 'u', 'ű' => 'u', 'Ų' => 'u',            'ų' => 'u', 'Ŵ' => 'w', 'ŵ' => 'w', 'Ŷ' => 'y', 'ŷ' => 'y', 'Ÿ' => 'y',            'Ź' => 'z', 'ź' => 'z', 'Ż' => 'z', 'ż' => 'z', 'Ž' => 'z', 'ž' => 'z',            'ſ' => 'z', 'Ə' => 'e', 'ƒ' => 'f', 'Ơ' => 'o', 'ơ' => 'o', 'Ư' => 'u',            'ư' => 'u', 'Ǎ' => 'a', 'ǎ' => 'a', 'Ǐ' => 'i', 'ǐ' => 'i', 'Ǒ' => 'o',            'ǒ' => 'o', 'Ǔ' => 'u', 'ǔ' => 'u', 'Ǖ' => 'u', 'ǖ' => 'u', 'Ǘ' => 'u',            'ǘ' => 'u', 'Ǚ' => 'u', 'ǚ' => 'u', 'Ǜ' => 'u', 'ǜ' => 'u', 'Ǻ' => 'a',            'ǻ' => 'a', 'Ǽ' => 'ae','ǽ' => 'ae','Ǿ' => 'o', 'ǿ' => 'o', 'ə' => 'e',            'Ё' => 'jo','Є' => 'e', 'І' => 'i', 'Ї' => 'i', 'А' => 'a', 'Б' => 'b',            'В' => 'v', 'Г' => 'g', 'Д' => 'd', 'Е' => 'e', 'Ж' => 'zh','З' => 'z',            'И' => 'i', 'Й' => 'j', 'К' => 'k', 'Л' => 'l', 'М' => 'm', 'Н' => 'n',            'О' => 'o', 'П' => 'p', 'Р' => 'r', 'С' => 's', 'Т' => 't', 'У' => 'u',            'Ф' => 'f', 'Х' => 'h', 'Ц' => 'c', 'Ч' => 'ch','Ш' => 'sh','Щ' => 'sch',            'Ъ' => '-', 'Ы' => 'y', 'Ь' => '-', 'Э' => 'je','Ю' => 'ju','Я' => 'ja',            'а' => 'a', 'б' => 'b', 'в' => 'v', 'г' => 'g', 'д' => 'd', 'е' => 'e',            'ж' => 'zh','з' => 'z', 'и' => 'i', 'й' => 'j', 'к' => 'k', 'л' => 'l',            'м' => 'm', 'н' => 'n', 'о' => 'o', 'п' => 'p', 'р' => 'r', 'с' => 's',            'т' => 't', 'у' => 'u', 'ф' => 'f', 'х' => 'h', 'ц' => 'c', 'ч' => 'ch',            'ш' => 'sh','щ' => 'sch','ъ' => '-','ы' => 'y', 'ь' => '-', 'э' => 'je',            'ю' => 'ju','я' => 'ja','ё' => 'jo','є' => 'e', 'і' => 'i', 'ї' => 'i',            'Ґ' => 'g', 'ґ' => 'g', 'א' => 'a', 'ב' => 'b', 'ג' => 'g', 'ד' => 'd',            'ה' => 'h', 'ו' => 'v', 'ז' => 'z', 'ח' => 'h', 'ט' => 't', 'י' => 'i',            'ך' => 'k', 'כ' => 'k', 'ל' => 'l', 'ם' => 'm', 'מ' => 'm', 'ן' => 'n',            'נ' => 'n', 'ס' => 's', 'ע' => 'e', 'ף' => 'p', 'פ' => 'p', 'ץ' => 'C',            'צ' => 'c', 'ק' => 'q', 'ר' => 'r', 'ש' => 'w', 'ת' => 't', '™' => 'tm',        );        $string = strtr($string, $table);        // Currency symbols: £¤¥€  - we dont bother with them for now        $string = preg_replace("/[^\x9\xA\xD\x20-\x7F]/u", "", $string);        return $string;    }        function getUserData($post){        $q = "SELECT id, login, first_name, last_name, city, email FROM users ";        $q.= "WHERE id='".$post['userId']."' ";                $result = mysql_query($q, $this->conection);        if($row = mysql_fetch_array($result)) {            return $row;        }        mysql_free_result($result);        mysql_close($conection);    }        function saveUserData($post){        $dataArray = $post['data'];        if($post['changePassword'] == '0'){//            for($i=0; $i<count($dataArray); $i++) {//                $q = "UPDATE users ";//                $q.= "SET '".$dataArray[$i]['name']."'='".$dataArray[$i]['value']."' ";//                $q.= "WHERE id='".$post['userId']."' ";//                $result = mysql_query($q, $this->conection);//                dump($q);//            }                        $q = "UPDATE users ";            $q.= "SET first_name='".$dataArray[0]['value']."', last_name='".$dataArray[1]['value']."', ";            $q.= "city='".$dataArray[2]['value']."', email='".$dataArray[3]['value']."' ";            $q.= "WHERE id='".$post['userId']."' ";        }else{            if($dataArray[0]['value'] == "" || $dataArray[1]['value'] == "" || $dataArray[2]['value'] == ""){                die("complete all fields");            }                        $q0 = "SELECT password FROM users ";            $q0.= "WHERE id='".$post['userId']."' ";            $result0 = mysql_query($q0, $this->conection);            if($row0 = mysql_fetch_array($result0)) {                $currentPassword = $row0['password'];            }            if($dataArray[1]['value'] == $dataArray[2]['value']){                $newPassword = md5($dataArray[1]['value']);                $oldPassword = md5($dataArray[0]['value']);                if ($currentPassword == $oldPassword) {                    $q = "UPDATE users ";                    $q.= "SET password='".$newPassword."' ";                    $q.= "WHERE id='".$post['userId']."' ";                } else {                    die("invalid password");                }            }else{                die("confirm password is invalid");            }        }        $result = mysql_query($q, $this->conection);        mysql_free_result($result);        mysql_close($conection);    }    }